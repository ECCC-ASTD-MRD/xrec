#include <gmp.h>

int  AllouerImages();
int  FldMgrVerConsistanceNiveauxChamps(int *indiceFautif);
void  f77name(xconup)();
XFontStruct *chargerLaFonte(Display *display, char fontName[]);
void ActiverAuxPeWidgets();
void ActiverFlagsAffichage();
void ActiverPanneauAnimation();
void ActiverPanneauAnimationVerticale();
void ActiverPanneauAttributs();
void ActiverPanneauColorBarInfos();
void ActiverPanneauContour();
void ActiverPanneauCoupe();
void ActiverPanneauDiapos();
void ActiverPanneauEdition();
void ActiverPanneauGeo();
void ActiverPanneauMinMax();
void ActiverPanneauPalette();
void ActiverPanneauSerie();
void ActiverPanneauStats();
void ActiverPanneauValeursManquantes();
void ActiverPanneauValeursPonctuelles();
void ActiverPanneauVents();
void ActiverTextFields();
void ActiverTousPeWidgets();
void ActiverWidget(Widget w);
void ActiverWidgetsControle();
void AfficherAxeY(_Champ champ);
void AfficherBoutonAnnulation();
void AfficherCarte(int indChamp);
void AfficherChampBiDimensionnel(int indChamp,int nbChampsActifs,float *fld,float min,float max,float *uu,float * vv);
void AfficherChampBiDimensionnel_m(int indChamp,int nbChampsActifs,float *fld,float min,float max,float *uu,float *vv);
XtCallbackProc AfficherColorBarInfos(Widget w, caddr_t unused1, caddr_t unused2);
void AfficherCoupe(int indChamp, float *fld, float *uu, float *vv, float *uut, float *uun, float *ww, float *uvw);
void AfficherFenetreLatLon(float latmin, float lonmin, float latmax, float lonmax, int couleurFore, int couleurBack);
void AfficherFleches(float *uu, float *vv, int ni, int nj, int couleur, int linewidth, float ventmax);
void AfficherGrille();
void AfficherGrilleSource(int indchamp);
int  AfficherItem(int indChamp,int itemAAfficher);
int  AfficherItem_m(int indChamp, int itemAAfficher);
void AfficherLIC(float *uu, float *vv, int ni, int nj, int couleur, int linewidth, float ventmax);
void AfficherLegende(int indChamp);
void AfficherLegende2(_Champ champ);
void AfficherLegendeCouleur(int colorTable[], float contourMin, float contourMax, float intervalles[], int nbIntervalles, float facteur, float x1, float y1, float x2, float y2);
void AfficherLegendeCoupe(int indChamp);
void AfficherLegendeCoupe2(_Champ champ);
void AfficherLegendeSerie(int indChamp);
void AfficherLegendeSup2();
void AfficherLegendeSupProfil(float xx, float yy, float xmin, float ymin, float xmax, float ymax);
void AfficherLegendeVent(float ventMax, int offsetX, int  offsetY, int angleFleche);
void AfficherLegendeVentUVW(float ventUVWmax);
void AfficherLigneCoupe();
void AfficherLigneSerie();
void AfficherMessageInfoStandard();
void AfficherOperationAnnulee();
void AfficherPerimetreFenetre();
void AfficherPixelBarre(float rx1, float ry1, float rx2, float ry2);
void AfficherProfilCoupe(float xx, float yy);
void AfficherProfilSerie(float xx, float yy);
void AfficherSerie(int indChamp, float *fld, float *uut, float *uun, float *ww, float *uvw);
XtCallbackProc AfficherStats(Widget w, caddr_t unused1, caddr_t unused2);
void AfficherSymbole(int i, int j,int n);
void AfficherTopo();
XtCallbackProc AfficherValeursAuxPtsDeGrille(Widget w, caddr_t unused1, caddr_t unused2);
void AfficherValeursPonctuelles(int indChamp);
void AjouterItemDansLaPile(int type, float valeur, float ancienneValeur, PointEditionStruct *anciennesValeurs, int x1, int y1, int x2, int y2);
int  AjouterNomVar(char *nomVar);
void AjusterLabelsTaille();
void AjusterLargeur(int taille);
void AjusterMinMax(float *ContourMin, float *ContourMax, float facteur, float intervalle);
void AjusterPositionForme(Widget w, Widget wp);
void AjusterVariationPalette(int newcmap[][3], int oldcmap[][3], int colorTable[], float amplificationMin, float reductionMax);
void AjusterViewport(_Viewport *viewp);
int  AllouerImages();
void AnimMgrInterpolateTimeField(_Champ *champ, int datev);
void AnimerFrames(int nbFrames);
void AnimerFramesAvecInterpolation(int nbFrames);
void AnimerFramesSansInterpolation(int nbFrames);
XtCallbackProc Annuler(Widget w, caddr_t unused1, caddr_t unused2);
int  AttrMgrGetFontSizeColorTable();
int  AttrMgrGetFontSizeLabels();
int  AttrMgrGetFontSizeLegend();
XtCallbackProc AvrtOk(Widget w, caddr_t client_data, caddr_t call_data);
void Beeper();
void CalcWWForZCoord(_Champ *champ);
void CalculerColorBarInfos(char texte[]);
void CalculerColorBarInfos2(char texte[], int index, _Champ *champ);
int  CalculerFacteurLissage(int ni, int nj);
int  CalculerHauteurLegende();
void CalculerHauteurMenus();
int  CalculerLargeurLegendeCouleur();
void CalculerStats(char texte[]);
void CalculerStats2(char texte[], int index, _Champ *champ, _Stats stats);
XtCallbackProc ChangerMenuIntervalles(int indMenu);
XtCallbackProc ChangerStatutSuperposition(Widget w,  caddr_t unused1, caddr_t unused2);
void CheckColormap(Widget w);
void CheckCouleurContoursEtGeo();
void CheckForUUandVV(_Champ *champ);
void CheckForWW(_Champ *champ);
void CheckGeoToggles (Widget w, caddr_t client_data, caddr_t call_data);
void CheckMenuIntervalles(int indMenu);
void CheckToggles (Widget w, caddr_t client_data, caddr_t call_data); 
int  ChercherNomVar(char *nomVar);
void ChoixFenetre(Widget w, caddr_t client_data, caddr_t call_data);
void CombinerLegendeDiffChamps(char texte[], _Champ *champ1, _Champ *champ2);
int  ComparerGridInfo();
void ConvertFloatToString(char str[], float val);
void ConvertFloatToString2(char str[], float val);
void CopierGridInfo(GeoMapInfoStruct *gridInfoSortie, GeoMapInfoStruct *gridInfoEntree);
int  CoupeMgrGetCoupeCoords(float *x1, float *y1, float *x2, float *y2);
int  CoupeMgrGetDimensionCoupe();
int  CoupeMgrGetFenetreCoupeID(int *fenetreID);
void CoupeMgrGetLimites(float *valmin, float *valmax, float *nivmin, float *nivmax);
void CoupeMgrGetLimitesUVW(float *uutanmin, float *uutanmax, float *uvwmin,float *uvwmax,float *uumin,float *uumax,float *vvmin,float *vvmax,float *wwmin,float *wwmax,float *nivmin,float *nivmax);
int  CoupeMgrGetSensEchelle();
int  CoupeMgrGetStatutCoupe();
int  CoupeMgrGetToggleTopo();
void CoupeMgrSetMinMax();
void CoupeMgrSetMinMaxCoupe();
void CoupeMgrSetUVWMinMax();
Widget CreateErrorDialog(Widget widgetParent);
Widget CreateInfoDialog(Widget widgetParent);
Widget CreateWarningDialog(Widget widgetParent);
Widget CreateWarningDialogWithCancelBox(Widget widgetParent);
int  CtrlMgrGetContextualMathOp(int indChamp);
int  CtrlMgrGetMathOp();
void CtrlMgrSetMathOp(int op);
int  DecodeRLEData(char *out, int  nptsout, unsigned char *in);
void DefinirFenetreGrille(int *ideb, int *jdeb, int *ifin, int *jfin, int ni, int nj);
void DesactiverAuxPeWidgets();
void DesactiverPanneauAnim();
void DesactiverPanneauAttributs();
void DesactiverPanneauAvertissement();
void DesactiverPanneauColorBarInfos();
void DesactiverPanneauContour();
void DesactiverPanneauCoupe();
void DesactiverPanneauDiapo();
void DesactiverPanneauEdition();
void DesactiverPanneauGeo();
void DesactiverPanneauMinMax();
void DesactiverPanneauPalette();
void DesactiverPanneauSerie();
void DesactiverPanneauStats();
void DesactiverPanneauValeursPonctuelles();
void DesactiverPanneauVanim();
void DesactiverPanneauVents();
void DesactiverTextFields();
void DesactiverTousPeWidgets();
void DesactiverWidget(Widget w);
void DesactiverWidgetsControle();
void DictMgrGetFacteurDeConversion(float *facteur, int indDict);
void DictMgrGetIdentifVar(char identifVar[], int indDict);
void DictMgrGetIndIntervalleDeDefaut(int *indIntervalle, int indDict);
void DictMgrGetIntervallesDeContours(float *intervalles, int *nbIntervalles, int indDict, int indIntervalle);
int  DictMgrGetMinMaxMode(char nomvar[]);
void DictMgrGetMinMaxValues(char nomvar[],float *min,float *max);
void DictMgrGetNbMenuItems(int *nbMenuItems, int indDict);
void DictMgrGetPaletteVar(char paletteVar[], int indDict);
void DictMgrGetUnitesVar(char unitesVar[], int indDict);
void DictMgrGetVariableList(char varlist[][5], int *n,int nmax);
void DictMgrSetFacteurDeConversion(float facteur, int indDict);
void DictMgrSetIndIntervalleDeDefaut(int indIntervalle, int indDict);
void DictMgrSetIntervallesDeContour(float *intervalles, int *nbIntervalles, int indDict, int indIntervalle);
void DictMgrSetMinMaxMode(char nomvar[],int pos, int mode);
void DictMgrSetMinMaxValues(char nomvar[], int pos, float min, float max);
void DiffMgrCalcDiffs(float *out,float *fld1,float *fld2, int npts, int op);
void DiffMgrCalcVDiffs2D(float *out,float *uu1,float *vv1,float *uu2,float *vv2,int npts,int op);
int  DiffMgrGetNbChampsAffichables();
void DiffMgrMergeMasks(int indChamp1, int indChamp2);
void DiffMgrSetDiffs(float *fld1,float *fld2,float *opmin,float *opmax, int npts);
void DiffMgrSetVDiffs2D(float *uu1,float *vv1,float *uu2,float *vv2,float *opmin,float *opmax,int npts);
void DiffMgrSetVDiffs3D(float *uu1,float *vv1,float *ww1, float *uu2,float *vv2,float *ww2, float *opmin, float *opmax, int npts);
void DrawBoxedStr(char *str, int x1, int y1, int size, int foreground, int background);
void DrawPointValues(_Champ *, int, int, int, int, int, int [], int);
void DrawPointValues(_Champ *champ, int indChamp, int fontSize, int lineThickness, int fore, int back, int cols[], int nbcols);
void EcrAtrAtr(FILE *fichierDemarrage);
void EcrConAtr(FILE *fichierDemarrage);
void EcrCtlAtr(FILE *fichierDemarrage);
void EcrGeoAtr(FILE *fichierDemarrage);
void EcrMinMaxAtr(FILE *fichierDemarrage);
void EcrPalAtr(FILE *fichierDemarrage);
void EcrWndAtr(FILE *fichierDemarrage);
XtCallbackProc Effacer(Widget w, XtPointer unused1, XtPointer unused2);
void EffacerCoupe ();
void EffacerFenetre();
void EffacerFenetreAffichage();
void EffacerFenetreCoupe();
void EffacerFenetreSerie();
void EffacerFenetres();
void EffacerLaFenetreSiNecessaire();
void EffacerLegende2();
void EffacerSerie();
void EncodeRLEData(unsigned char *out, int  *nptsout, char *in, int  nptsin);
void EnleverBoutonAnnulation();
void EnleverLigneCoupe(float x1, float y1, float x2, float y2);
void EnleverLigneSerie(float x1, float y1, float x2, float y2);
XtCallbackProc ErrorQuit(Widget w, caddr_t client_data, caddr_t call_data);
void ExportImage();
void ExportMovie();
XtCallbackProc FermeurAnnuler();
XtCallbackProc FermeurAnnuler(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc FermeurEffacerSelection();
XtCallbackProc FermeurFermerFichiers();
XtCallbackProc FermeurOK();
XtCallbackProc FermeurToutSelectionner();
int  FldMgrAddChamp(int cle, int iun);
void FldMgrAjusterDimensionsGrille(_Champ *champ);
void FldMgrCalcDiffMinMax(float *min,float *max,float *fld1,float *fld2, int npts);
void FldMgrCalcMinMaxUVW(int indChamp);
void FldMgrCalcPDFDatev(char pdfdatev[], int *datev, int dateo, int deet,int npas,int ip2);
void FldMgrCalcVDiffMinMax(float *min,float *max,float *fld1,float *fld2, int npts);
int  FldMgrComparerDates();
void FldMgrDefineDefaultIntervals(_Champ *champ);
int  FldMgrDefinirGrille();
int  FldMgrFlagMissingValues(_Champ *champ);
void FldMgrFreeAllFlds(_Champ *champ);
int  FldMgrFreeAnimFlds(_Champ *champ);
void FldMgrFreeCoupeFlds(_Champ *champ);
void FldMgrFreeMainFlds(_Champ *champ);
void FldMgrFreeTimeAnimationSeq();
void FldMgrFreeVerticalXSection();
void FldMgrGetAllDates(char dates[][16], int *nbDates);
void FldMgrGetChamp(_Champ **champ, int indice);
int  FldMgrGetFstPrm(_Champ *champ);
int  FldMgrGetNbChampsActifs();
void FldMgrInitAnimCles(_Champ *champ, char dates[][16], int nbDates);
void FldMgrInitAnimFlds(_Champ *champ, int nbCles);
void FldMgrInitChamps();
int  FldMgrLoadTimeAnimationSeq();
int  FldMgrLoadVerticalXSection();
void FldMgrLoad_HY(int indChamp);
void FldMgrMessageChargementFichiers(char texte[], int i, int n);
int  FldMgrPreparerCoupe(_Champ *champ, float *rx1, float *ry1, float *rx2, float *ry2);
int  FldMgrPreparerSerie(_Champ *champ, float *rx1, float *ry1, float *rx2, float *ry2);
int  FldMgrPreparerTopo();
void FldMgrProcessChamp(_Champ *champ);
void FldMgrRemoveChamp(int indChamp);
int  FldMgrReorgAnimCles(_Champ *champ, char dates[][16], int nbDates);
int  FldMgrReplaceChamp(int cle, int iun);
void FldMgrRescaleUUVV(int indChamp);
void FldMgrRescaleWW(int n,int echelleWW,int oldEchelleWW);
int  FldMgrSetAnimDiffMinMax(int indChamp);
void FldMgrSetCoupeMinMax(int ind);
int  FldMgrSetDiffCoupeMinMax(int ind);
int  FldMgrSetDiffMinMax(int ind);
void FldMgrTrierClesSelonIP1(int listeCles[], int *nbCles);
void FldMgrUpdateFldParams(_Champ *champ);
void FldMgrUpdateGridParams(_Champ *champ);
void FldMgrVerConsistanceGrilles(_Champ champ, int listeCles[], int *nbCles);
void FldMgrVerConsistanceNiveaux(_Champ champ, int listeCles[], int *nbCles);
void GeoMgrClearMapInfo(void);
void GeoMgrGetMapInfo(char *grtyp, char *grref, int *ni, int *nj, int *ig1, int *ig2, int *ig3, int *ig4, float **lat, float **lon);
void GeoMgrSetLatLon(float *lat, float *lon);
void GetDimensionsLegendeVent(int *largeur,int *hauteur);
void GetFenetreAffichageID(int *indFenetre);
void GetFormat(char str[], float intervalles[], int nbIntervalles, float facteurEchelle);
int  GetGrilleSelectionnee();
int  GetLogoToggle();
int  GetMinMaxUV(float *uvmin, float *uvmax);
int  GetNbChampsDict();
int  GetSelectedVertCoord();
int  GetSurfacePressure(_Champ *champ);
int  GetValeursManquantesToggle();
int  GrillesIdentiques(GeoMapInfoStruct mapInfo,int ni, int nj, char type, int ig1, int ig2, int ig3, int ig4);
int  HasGridChanged(char newgrtyp, int newni, int newnj, int newnk, int newig1, int newig2, int newig3, int newig4);
int  ImprimerLegendeCouleur(char tableau[], int lngMaxTableau, int colorTable[], float contourMin, float contourMax, float intervalles[], int nbIntervalles, float facteur);
void InitAttributs();
void InitColor(Display *display, int *foreground, int *background, int *bordercolor);
void InitDictionnaire();
void InitFenetreCoupe();
void InitFenetreSerie();
void InitFermeurForm(char **listeFich, int nbFich);
void InitFermeurShell();
void InitFormeAffichage();
void InitFormeAnimation();
void InitFormeMessage();
void InitFormeSuperposition();
void InitFormeZoom();
void InitMapInfo(char type, int ni, int nj, int ig1, int ig2, int ig3, int ig4);
void InitMenuAffichage();
void InitMenuCalculs();
void InitMenuFichier();
void InitMenuGrille();
void InitMenuIntervalles();
void InitMenuOptions();
void InitMenuVecteurs();
void InitOldMapInfo();
void InitPanneauAnim();
void InitPanneauAnimVerticale();
void InitPanneauAttributs();
void InitPanneauColorBarInfos();
void InitPanneauContour();
void InitPanneauCoupe();
void InitPanneauDiapo();
void InitPanneauEdition();
void InitPanneauGeo();
void InitPanneauMinMax();
void InitPanneauOptions();
void InitPanneauPalette();
void InitPanneauSerie();
void InitPanneauStats();
void InitPanneauValeursPonctuelles();
void InitPanneauVents();
void InitPanneauxInfo();
void InitPixelsCouleursDeBase(Pixel indCouleurs[]);
void InvertWidget(Widget w);
void LibererImages();
void Ligne(int *event, float *fcx1, float *fcy1, float *fcx2, float *fcy2);
int  LireDictionnaireRMNLIB(_InfoChamps infoChamps[]);
void LireDictionnaireRMNLIB_XML(_InfoChamps infoChamps[]);
int  LireDictionnaireUsager(_InfoChamps infoChamps[]);
int  LireDictionnaireXML(FILE *fichierEntree);
void LireLigne(FILE *FichierEntree, char Ligne[]);
int  LireStartRec();
int  LocalEventLoop(Widget topLevelWidget);
void MAJLabelsPile(int noAnnul, int noRefaire);
void ManipulerChampBiDimensionnel(int indChamp);
void ManipulerEtAfficherCoupeVerticale(int indChamp);
void ManipulerEtAfficherSerieTemporelle(int indChamp);
XtCallbackProc MenuAffichageSelect(Widget w, XtPointer unused1, XtPointer unused2);
XtCallbackProc MenuCalculSelect(Widget w, XtPointer unused1, XtPointer unused2);
XtCallbackProc MenuFichierSelect(Widget w, XtPointer client_data, XtPointer call_data);
XtCallbackProc MenuGrilleSelect(Widget w, XtPointer unused1, XtPointer unused2);
XtCallbackProc MenuIntervalleSelect(Widget w, XtPointer client_data, XtPointer call_data);
XtCallbackProc MenuOptionSelect(Widget w, XtPointer unused1, XtPointer unused2);
XtCallbackProc MenuVecteurSelect(Widget w, XtPointer unused1, XtPointer unused2);
void MessageAide(char *str);
int  MessageAvertissement(char *message, int typeMessage);
int  MessageAvertissementAux(char *message, int typeMessage, Widget widgetMessage, Widget widgetParent);
void MessageErreur(char message[]);
void MessageInfo(char message[], int reverseVideo);
void MettreAJourColorBarInfos();
void MettreAJourDstColorBarInfos();
void MettreAJourDstStats();
void MettreAJourSrcColorBarInfos();
void MettreAJourSrcStats();
void MettreAJourStats();
void MettreAJourZoomColorBarInfos(void);
void MettreAJourZoomStats(void);
void NoRMNLIB();
void PCSplitItem(int *attribut, int *ind, char *item);
XtCallbackProc PColorBarInfoAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PColorBarInfoOk(Widget w, caddr_t unused1, caddr_t unused2);
void PGSplitItem(int *attribut, int *ind, char *item);
XtCallbackProc PStatAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PStatOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PVentSetDEET(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PVentSetDELAI(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PVentSetNPAS(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PVentSetNPTS(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PVentSetSEGLEN(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PVentSetSEGSTEP(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PVentStart(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PVentStop(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaFermer(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaLastFrame(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaLastFrames(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaNextFrame(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaNextFrames(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaSetDelai(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaSetIntervalle(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaStop(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaToggleAnimationRapide(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PaToggleDefilementAvantArriere(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaToggleDefilementRegulier(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PaToggleInterpolation(Widget w, caddr_t unused1, caddr_t unused2);
int  PaletteMgrGetVariation();
int  PasAssezDeMemoire(Display *disp, XErrorEvent *erreur);
XtCallbackProc PattAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PattOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavFermer(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavLastFrame(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavLastFrames(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavNextFrame(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavNextFrames(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavSetDelai(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PavSetIntervalle(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PavStop(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PavToggleAnimationRapide(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PavToggleDefilementAvantArriere(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PavToggleDefilementRegulier(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PavToggleInterpolation(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PavToggleNiveaux(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PavToggleTemps(Widget w, caddr_t u1, caddr_t u2);
XtCallbackProc PcAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcOk(Widget w, caddr_t unused1, caddr_t unused2);
void PcpActiverTextWidgets_X();
void PcpActiverTextWidgets_Y();
XtCallbackProc PcpAfficher(Widget w, caddr_t unused1, caddr_t unused2);
void PcpDesactiverTextWidgets_X();
void PcpDesactiverTextWidgets_Y();
XtCallbackProc PcpNouvelleCoupe(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcpOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcpScanCoupe(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcpScanCoupeHoriz(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcpScanCoupeVert(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcpScanProfil(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcpSetDimensionCoupeT(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetDimensionCoupeZP(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetEchelleCroissante(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetEchelleDecroissante(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetEchelleLineaire(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetEchelleLog(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetIncrement(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PcpSetMinMaxGrilles_X(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetMinMaxGrilles_Y(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetMinMaxProfil_X(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetMinMaxProfil_Y(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetMinMax_X_Usager(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetMinMax_Y_Usager(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcpSetNativeVertCoord(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PcpSetPresVertCoord(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PcpStop(Widget w, caddr_t arg1, caddr_t arg2);
void PcsActiverTextWidgets();
XtCallbackProc PcsAfficher(Widget w, caddr_t unused1, caddr_t unused2);
void PcsDesactiverTextWidgets();
XtCallbackProc PcsNouvelleSerie(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcsOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcsScanProfilSerie(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcsScanSerie(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcsScanSerieHoriz(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcsScanSerieVert(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PcsSetDimensionSerieT(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsSetDimensionSerieZP(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsSetEchelleLineaire(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsSetEchelleLog(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsSetIncrement(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PcsSetMinMaxGrilles(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsSetMinMaxProfilSerie(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsSetMinMaxUsager(Widget w, caddr_t arg1, caddr_t arg2);
XtCallbackProc PcsStop(Widget w, caddr_t arg1, caddr_t arg2);
void PdAdjustLargeur(Widget w, caddr_t client_data, caddr_t call_data);
XtCallbackProc PdAfficher(Widget w, caddr_t unused1, caddr_t unused2);
void PdAllouerRessourcesImage();
void PdCreatePNGimage(char *nomFichierPNG);
void PdDesallouerRessourcesImage();
XtCallbackProc PdOk(Widget w, caddr_t unused1, caddr_t unused2);
void PdReadDiapo(Widget w, caddr_t client_data, caddr_t call_data);
void PdReadDiapo(Widget w, caddr_t client_data, caddr_t call_data); 
void PdRes(Widget w, caddr_t client_data, caddr_t call_data);
void PdSelectNomvar(Widget w, caddr_t client_data, caddr_t call_data); 
void PdSetDiapoAuto(Widget w, caddr_t client_data, caddr_t call_data); 
void PdSetDiapoFixe(Widget w, caddr_t client_data, caddr_t call_data);
void PdSetDiapoFixe(Widget w, caddr_t client_data, caddr_t call_data); 
void PeActiverBoutons();
XtCallbackProc PeAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PeAnnulerEdition();
XtCallbackProc PeAnnulerToutesModifs(Widget w, caddr_t unused1, caddr_t unused2);
void PeDesactiverBoutons();
XtCallbackProc PeEditerValeurs(Widget w, caddr_t clientData, caddr_t callData);
XtCallbackProc PeEnregistrer(Widget w, caddr_t clientData, caddr_t callData);
XtCallbackProc PeFermer();
XtCallbackProc PeRefaireEdition();
XtCallbackProc PgActive(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PgAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PgEpaisseur(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PgEspaceMeridiens(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PgMeridiens(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PgOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PgResolution(Widget w, caddr_t unused1, caddr_t unused2);
void PgSetEpaisseur(int valeur);
void PgSetEspacementMeridiens(int valeur);
void PgSetFrontieresActives(int valeur);
void PgSetMeridiens(int valeur);
void PgSetResolution(int valeur);
XtCallbackProc PmAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PmOk(Widget w, caddr_t unused1, caddr_t unused2);
void PmReadMinMax(Widget w, caddr_t client_data, caddr_t call_data); 
void PmSelectNomvar(Widget w, caddr_t client_data, caddr_t call_data); 
void PmSetMinMaxAuto(Widget w, caddr_t client_data, caddr_t call_data);
void PmSetMinMaxFixe(Widget w, caddr_t client_data, caddr_t call_data); 
XtCallbackProc PoAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PoOk(Widget w, caddr_t unused1, caddr_t unused2);
void PointerFleche(float xdepart, float ydepart, float dirVent, float vitVent, int rayon, int width);
void PointerVent(float xdepart, float ydepart, float dirVent, float vitVent, int rayon);
XtCallbackProc PpAfficher(Widget w, caddr_t unused1, caddr_t unused2);
void PpInfoColorBar(Widget w, caddr_t client_data, caddr_t call_data); 
XtCallbackProc PpOk(Widget w, caddr_t unused1, caddr_t unused2);
int  PreparerCoupe(float cx1,float cy1,float cx2,float cy2);
int  PreparerSerie(float sxt1, float syt1, float sxt2, float syt2);
void ProfilAfficherAxe(float axe[], int npts, float inter[], int nbInter, float axemin, float axemax, float xorig, float yorig, int direction);
void ProfilAfficherTicks(float axe[], int npts, float inter[], int nbInter, float axemin, float axemax, float xorig, float yorig, float ymax,int direction);
void ProfilCalculerCoordsFenetre(int *wini1, int *winj1, int *wini2, int *winj2, int i1, int j1, int i2, int j2);
void ProfilCalculerMinMax(float *xmin, float *ymin, float *xmax, float *ymax, float *x, float *y, int npts);
XtCallbackProc PtValAfficher(Widget w, caddr_t unused1, caddr_t unused2);
int  PtValMgrGetAffichageLatlon();
int  PtValMgrGetAffichageValeurs();
int  PtValMgrGetColorStatus();
float PtValMgrGetSymbolSize();
int  PtValMgrGetSymboleType();
int  PtValMgrGetUnitesSymbole();
XtCallbackProc PtValOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PventAfficher(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc PventOk(Widget w, caddr_t unused1, caddr_t unused2);
XtCallbackProc Quit(Widget w, XtPointer client_data, XtPointer call_data);
XtCallbackProc QuitAndSave(Widget w, XtPointer client_data, XtPointer call_data);
void RafraichirColorBarInfos(char texte[]);
XtCallbackProc RafraichirFenetre(Widget w, XtPointer unused1, XtPointer unused2);
void RafraichirStats();
void RedessinerFenetreAffichage();
void RedessinerFenetreCoupe();
void RedessinerFenetreSerie();
void RedessinerFenetres();
void RefuserOperation();
void RemettreChampsAJour(int i);
void ResetColorMap(int colorTable[], int ncol, int colorMapType);
void RestoreScalarWindFields(_Champ *champ);
void SToXm(XmString *xm, char *string);
int  SelectFontSize(char *str, int largeur, int hauteur);
int  SerieMgrGetFenetreSerieID(int *fenetreID);
void SerieMgrGetLimites(float *valmin, float *valmax, float *nivmin, float *nivmax);
void SerieMgrGetLimitesUVW(float *uutanmin, float *uutanmax, float *uvwmin, float *uvwmax, float *uumin, float *uumax, float *vvmin, float *vvmax, float *wwmin, float *wwmax, float *nivmin, float *nivmax);
int  SerieMgrGetSerieCoords(float *x1, float *y1, float *x2, float *y2);
int  SerieMgrGetStatutSerie();
void SerieMgrSetMinMax();
void SerieMgrSetMinMaxSerie();
void SerieMgrSetUVWMinMax();
void SetAffichageTailleSymbole (Widget w, caddr_t client_data, caddr_t call_data);
void SetAffichageTailleSymbole(Widget w, caddr_t client_data, caddr_t call_data);
void SetAffichageValeurLatlon (Widget w, caddr_t client_data, caddr_t call_data);
void SetAffichageValeurToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetCentralValueSizeToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetCentralValuesToggle (Widget w, caddr_t client_data, caddr_t call_data) ;
void SetClipMask();
void SetColorToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetContoursToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetCouleurToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetCroissanceToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetCurseur(Window window);
void SetDensiteToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetEchelleFlechesToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetEchelleWWToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetEpaisseurFToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetFontSizeColorLegendToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetFontSizeLabelToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetFontSizeLegendToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetFormatToggle(Widget w, caddr_t client_data, caddr_t call_data);
void SetGeoColorToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetGeoStyleToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetGeoThicknessToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetGeometrieFenetreAffichage(char *nomFenetre);
void SetIgnoreMode();
void SetInterpolationToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetLICOff (Widget w, caddr_t client_data, caddr_t call_data);
void SetLICOn (Widget w, caddr_t client_data, caddr_t call_data);
void SetLabelSizeToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetLabelsToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetLissageToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetLongueurToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetMaxToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetMinToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetModeBarbules(Widget w, caddr_t client_data, caddr_t call_data);
void SetModeFleches (Widget w, caddr_t client_data, caddr_t call_data);
void SetModeNone(Widget w, caddr_t client_data, caddr_t call_data);
void SetModuleOff (Widget w, caddr_t client_data, caddr_t call_data);
void SetModuleOn (Widget w, caddr_t client_data, caddr_t call_data);
void SetPaletteToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetStyleToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetSymboleToggle (Widget w, caddr_t client_data, caddr_t call_data);
void SetThicknessToggle (Widget w, caddr_t client_data, caddr_t call_data); 
void SetUnitesSymbole (Widget w, caddr_t client_data, caddr_t call_data);
void SetVariationToggle (Widget w, caddr_t client_data, caddr_t call_data); 
int  ThisIsTheCurrentGrid(char newgrtyp, int newni, int newnj, int newnk, int newig1, int newig2, int newig3, int newig4);
void TracerCercle(float x, float y);
void TracerLigne(float rcx1, float rcy1, float rcx2, float rcy2);
Widget TrouverWidgetParent(Window eventWindow);
void UnSetCurseur(Window window);
void UnsetIgnoreMode();
void UpdateFld_IntervalleDeContour(_Champ *champ , float nouvelIntervalle[], int nbIntervalles);
void UpdateTitreIntervalle(char titreIntervalles[],float intervalles[],int nbIntervalles, float facteurEchelle, char titreUnites[]);
void VAfficherOperationAnnulee();
int  VAllouerImages();
void VAnimMgrInterpolateVerticalField(_Champ *champ, float niveau);
void VAnimerFrame();
void VAnimerFrames(int nbFrames);
void VAnimerFramesAvecInterpolation(int nbFrames);
void VAnimerFramesSansInterpolation(int nbFrames);
void VRemettreChampsAJour(int i);
int  VerifierExistenceCoupeValide();
int  VerifierExistenceSerieValide();
int  WindMgrGetCroissance();
float WindMgrGetDensite();
int  WindMgrGetDisplayMode();
int  WindMgrGetEchelleWW();
int  WindMgrGetEpaisseur();
int  WindMgrGetLICState();
int  WindMgrGetLongueur();
int  WindMgrGetModulusState();
void XFileFermeur(char **listeFich, int *nbFich);
int  Xinit(char nomApplication[]);
void XmToS(XmString xm, char **string);
XtCallbackProc Zoom(Widget w, caddr_t client_data, caddr_t call_data);
void bidonprint(float px, float pos, char *nombre);
void c_animvent(float *uu,float *vv,float *mapscl,int ni,int nj, int seglen, float *uut,float *vvt,int npts,int nnpas,int deet,int segstep,float delai);
void c_dors(float delai);
int  c_ezgdefrec(int ni, int nj, char *grtyp, int ig1, int ig2, int ig3, int ig4);
int  c_ezsint_mask(unsigned int *maskout, unsigned int *maskin, int gdin, int gdout);
int  c_fstinlo(int iun, int *ni, int *nj, int *nk, int date, char etiket[], int ip1, int ip2, int ip3, char typvar[], char nomvar[], int listeCles[], int *nbCles, int nbMaxCles);
int  c_getulng();
int  c_wglallocf(int nimages);
int  c_wglanul();
void c_wglcalcolf(float indices[], float val[], int nbVals, float min,  float delta,  float intervalles[], int nbIntervalles, float facteur, int nbCol);
void c_wglcalcolf_m(float indices[], float val[], int nbVals, float min, float delta, float intervalles[], int nbIntervalles, float facteur, int nbCol);
void c_wglcalcols(int indices[], float val[], int nbVals, float min, float delta, float intervalles[], int nbIntervalles, float facteur, int nbCol);
void c_wglcalcols_m(int indices[], float val[], int nbVals, float min, float delta, float intervalles[], int nbIntervalles, float facteur, int nbCol);
void c_wglcont(float *fld, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float rmin, float rmax, int couleur, int epaisseur, int codeDash, int dashPattern, int facteurLissage, int flagInterrupt);
void c_wglcopyf(int ind);
int  c_wgldeallocf(int nImages);
void c_wgldrl(float *z, int ni,int nj, int mdeb,int ndeb,int mfin,int nfin, int smoothFactor);
void c_wglfton(float *fld, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max, int colorTable[], int ncol, int flagInterrupt, int lissfac);
void c_wglfton_m(float *fld, unsigned int *mask, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max,  int colorTable[], int ncol, int flagInterrupt, int lissfac);
void c_wglgetcolrange(int *indMin, int *indMax);
void c_wgllab(float *fld, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max, float posLabels[], int nbLabels, int fore, int back, int indChamp, int lissfac);
void c_wglpastef(int ind);
void c_wglpfton(float *fld, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max, int colorTable[], int ncol, int flagInterrupt, int lissfac);
void c_wglpfton32(float *fld, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max, int colorTable[], int ncol, int flagInterrupt, int lissfac);
void c_wglpfton32_m(float *fld, unsigned int *mask, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max, float missing, int colorTable[], int ncol, int flagInterrupt, int lissfac);
void c_wglpfton32_x(float *fld, float *x, float *y, int ni, int nj, float intervalles[], int nbIntervalles, float facteur, float min, float max, int colorTable[], int ncol, int flagInterrupt, int lissfac);
void c_wglrfton_m(float *fld, unsigned int *mask, int ni, int nj, float intervalles[], int nbint, float rfac, float rmin, float rmax, float missing, int colorTable[], int nbcol);
void c_wglstl(float *z, int ni,int nj, int mdeb,int ndeb,int mfin,int nfin, float contourValue, int smoothFactor);
unsigned char  InvertChar(unsigned char nombre);
int  compact_mask(unsigned int *dest, int *src, int npts);
void courbe(float x[], float y[], int npts, float xmin, float xmax, float ymin, float ymax, float *intX, float *intY, int nbIntX, int nbIntY, int axeXRenverse, int axeYRenverse, int i1, int j1, int i2, int j2);
float cp_hyb(float psurf, float hyb, float ptop, float pref, float rcoef);
void draw_logo(int idebut, int jdebut, int width, int height, char bits[], int fore);
void draw_rec_version();
void draw_rpn_logo();
void enhancefracs(float *vals, int nbVals, float min,float delta, int variation);
void enhancefracs_m(float *vals, int nbVals, float min,float delta, int variation);
void f77name(ajusminmax)(float *cmin, float *cmax, float *facteur, float *intervalle);
void f77name(c_sanmatr)(char item[], char valeur[], int lenItem, int lenValeur);
void f77name(c_satratr)(char item[], char valeur[], int lenItem, int lenValeur);
void f77name(c_sconatr)(char item[], char valeur[], int lenItem, int lenValeur);
void f77name(c_scpeatr)(char item[], char valeur[], int lenItem, int lenValeur);
void f77name(c_sctlatr)(char item[],char valeur[],int lenItem,int lenValeur);
void f77name(c_sgeoatr)(char item[], char valeur[], int lenItem,int lenValeur);
void f77name(c_sminmaxatr)(char item[],char valeur[], int lenItem, int lenValeur);  
void f77name(c_spalatr)(char item[],char valeur[], int lenItem, int lenValeur);  
void f77name(c_swndatr)( char item[], char valeur[], int lenItem, int lenValeur);
void f77name(c_xrecgrille)(char gridname[], int *gridtype, int *ni, int *nj, int *ig1, int *ig2, int *ig3, int *ig4, int lennomgrille);
void f77name(decrle)(float *fld, int *npts);
void f77name(initvar)(char nomVar[], char idVar[], char unitesVar[], char paletteVar[], float *echelleVar,int *indDef,float  intVar[][24],int  *nbIntVar,int  nomVarLen, int idVarLen, int unitesVarLen, int paletteVarLen);
int  f77name(messerr)(char message[], int len);
void f77name(messinf)(char *message, int lenMessage);
void f77name(qqqnocore)();
void f77name(recnologo)();
void f77name(rlx)(char nomFichierDictionnaire[], int longueur);
void f77name(setcolors)(int *indMin, int *indMax);
void f77name(sminmax_ij)(float *rmin, float *rmax, int *imin, int *jmin, int *imax, int *jmax, float *fld, int *ni, int *nj, int *idebut, int *jdebut, int *ifin, int *jfin);
void f77name(wglcalcols)(int indices[], float val[], int *nbvals, float *min, float *delta, float *intervalles, int *nbIntervalles, float *facteur, int *nbcol);
void f77name(wglcalcols_m)(int indices[], float val[], int *nbvals, float *min, float *delta, float *intervalles, int *nbIntervalles, float *facteur, int *nbcol);
int  f77name(xconact)(int recs[], int *nbrecs, int *iun);
void f77name(xcondown)();
int  f77name(xconouv)(int *iun);
void f77name(xfcl)(char *listeFich, int *nfich, int lenFich);
int  f77name(xinit)(char nomApplication[], int  lenNomApplication);
void f77name(xp_ptvalact)();
void f77name(xpancact)();
void f77name(xpancbiact)();
void f77name(xpandact)();
void f77name(xpaneact)();
void f77name(xpangact)();
void f77name(xpanmact)();
void f77name(xpanpaact)();
void f77name(xpanpact)();
void f77name(xpanpavact)();
void f77name(xpanpcpact)();
void f77name(xpanpcsact)();
void f77name(xpanstatact)();
void f77name(xpattact)();
void f77name(xpventact)();
void get_rpn_logo_size(int *largeurLogo, int *hauteurLogo);
void get_sea_logo_size(int *largeurLogo, int *hauteurLogo);
void hl_find (float *vect, int ni, int nj, float scale, Hilo hilo[], int *hlcount, int hlnmax);
int  hl_getFontSize();
void hl_print (Hilo hilo[], int hlcount, float scale, int fore, int back);
void hl_setFontSize(int size);
void i2rgdint(float *zout, float *x, float *y, int npts, unsigned short *z, int ni, int nj);
unsigned int  InvertInt(unsigned int nombre);
void nettoyer(char chaine[]);
void pack(unsigned short shortvec[], float floatvec[], int npts, float min, float max);
unsigned short  InvertShort(unsigned short nombre);
void smeanvar_missing(float *mean, float *stddev, float *fld, unsigned int *mask, int *npts, int *npts_total,int ni, int nj, int idebut, int jdebut, int ifin, int jfin);
void sminmax_missing_ij(float *rmin, float *rmax, int *imin, int *jmin, int *imax, int *jmax, float *fld, unsigned int *mask, int ni, int nj, int idebut, int jdebut, int ifin, int jfin);
void strclean(char *chaine);
int  strfind(char *SousChaine, char *Chaine);
int  uncompact_mask(int *dest, unsigned int *src, int npts);
void unpack(unsigned short shortvec[], float floatvec[], int npts, float min, float max);
void xrecGetCurrentMinMax(float *min, float *max, int mode);
unsigned int x_wglcolfs_fst(float *cols, unsigned int *pixels, int n);
